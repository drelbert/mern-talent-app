{"ast":null,"code":"import _slicedToArray from \"/Users/delbert/dev/mern-talent-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/delbert/dev/mern-talent-app/src/development/pages/LearningAssets.js\";\nimport React, { useState } from 'react';\n\nconst LearningAssets = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Learning Assets\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Clicked this many \", count), React.createElement(\"button\", {\n    onClick: () => setCount(count + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Click This\"));\n};\n\nexport default LearningAssets;","map":{"version":3,"sources":["/Users/delbert/dev/mern-talent-app/src/development/pages/LearningAssets.js"],"names":["React","useState","LearningAssets","count","setCount"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA,oBAECD,QAAQ,CAAC,CAAD,CAFT;AAAA;AAAA,QAElBE,KAFkB;AAAA,QAEXC,QAFW;;AAIzB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBD,KAAtB,CAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF;AASH,CAbD;;AAeA,eAAeD,cAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst LearningAssets = () => {\n\n    const [count, setCount] = useState(0);\n\n    return (\n      <div>\n        <h2>Learning Assets</h2>\n        <p>Clicked this many {count}</p>\n        <button onClick={() => setCount(count + 1)}>\n            Click This\n        </button>\n      </div>\n    );\n}\n\nexport default LearningAssets;"]},"metadata":{},"sourceType":"module"}